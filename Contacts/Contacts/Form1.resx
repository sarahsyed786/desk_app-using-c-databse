<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAEABADoAgAAJgAAACAgAAABAAgAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzMAAAAAAAAAAAAAAzM
        zMzMzMzAAAAAAAAAACIgzMzMzMzMDMAAAAAAAAIiIgzMzMzMwCDMAAAAAAAqoqIgDMzMzMBgzMAAAAAC
        qioqIiDMzMzMDMwAAAAAKqqqoqIgzMzMzMwAIgAAACqqqqoiIMzMzMzAIiAgAAqqqqqqoiIMzMwMAiIi
        IAAKp6qqqqIiDs7AICIiIgIACnp6qqoiIuzswiIiIiIiAKenp6qiIi7OzsJiYiIiIgCnenqqIi7u7uzi
        JiYiIiAgr3enqi7u7u7uwnJiYiIiAHp3enqi7u7u7idmJiIiIiB/p3eiLu7u7uJ2Z2JiIiIgf/qnru7u
        7u7uJyJ2JiYiIH//+u7u7u7u7uLMInJiIiB//+/u7u7u7uLu7MwnZiIgB//+/iLu7u4iLiDMJ2YiAAf/
        /+IiLu7u4uKiDMJyIgAH//7yoi7u7u7uKiDMIiIAAH/yKqIi7u7u7uKizMwgAAB/KqqiIi7u7u7uLMzM
        wAAACn96qiIi7u7u7uzszAAAAACn96qqIi7iLO7uzMAAAAAACn96qqIiIiIs7swAAAAAAACn96qqqqIi
        IszMAAAAAAAACqf3qqqqoiIswAAAAAAAAAAKqn96qqoiIAAAAAAAAAAAAACqqqqqAAAAAAAA//AP//+A
        Af/+AAB//AAAP/gAAB/wAAAP4AAAB8AAAAPAAAADgAAAAYAAAAGAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAADwAAAA+AAAAfwAAAP+AAAH/wAAD/+AAB//4AB///w
        D/8oAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwADA3MAA8MqmANTw/wCx4v8AjtT/AGvG/wBIuP8AJar/AACq/wAAktwAAHq5AABi
        lgAASnMAADJQANTj/wCxx/8Ajqv/AGuP/wBIc/8AJVf/AABV/wAASdwAAD25AAAxlgAAJXMAABlQANTU
        /wCxsf8Ajo7/AGtr/wBISP8AJSX/AAAA/gAAANwAAAC5AAAAlgAAAHMAAABQAOPU/wDHsf8Aq47/AI9r
        /wBzSP8AVyX/AFUA/wBJANwAPQC5ADEAlgAlAHMAGQBQAPDU/wDisf8A1I7/AMZr/wC4SP8AqiX/AKoA
        /wCSANwAegC5AGIAlgBKAHMAMgBQAP/U/wD/sf8A/47/AP9r/wD/SP8A/yX/AP4A/gDcANwAuQC5AJYA
        lgBzAHMAUABQAP/U8AD/seIA/47UAP9rxgD/SLgA/yWqAP8AqgDcAJIAuQB6AJYAYgBzAEoAUAAyAP/U
        4wD/sccA/46rAP9rjwD/SHMA/yVXAP8AVQDcAEkAuQA9AJYAMQBzACUAUAAZAP/U1AD/sbEA/46OAP9r
        awD/SEgA/yUlAP4AAADcAAAAuQAAAJYAAABzAAAAUAAAAP/j1AD/x7EA/6uOAP+PawD/c0gA/1clAP9V
        AADcSQAAuT0AAJYxAABzJQAAUBkAAP/w1AD/4rEA/9SOAP/GawD/uEgA/6olAP+qAADckgAAuXoAAJZi
        AABzSgAAUDIAAP//1AD//7EA//+OAP//awD//0gA//8lAP7+AADc3AAAubkAAJaWAABzcwAAUFAAAPD/
        1ADi/7EA1P+OAMb/awC4/0gAqv8lAKr/AACS3AAAerkAAGKWAABKcwAAMlAAAOP/1ADH/7EAq/+OAI//
        awBz/0gAV/8lAFX/AABJ3AAAPbkAADGWAAAlcwAAGVAAANT/1ACx/7EAjv+OAGv/awBI/0gAJf8lAAD+
        AAAA3AAAALkAAACWAAAAcwAAAFAAANT/4wCx/8cAjv+rAGv/jwBI/3MAJf9XAAD/VQAA3EkAALk9AACW
        MQAAcyUAAFAZANT/8ACx/+IAjv/UAGv/xgBI/7gAJf+qAAD/qgAA3JIAALl6AACWYgAAc0oAAFAyANT/
        /wCx//8Ajv//AGv//wBI//8AJf//AAD+/gAA3NwAALm5AACWlgAAc3MAAFBQAPLy8gDm5uYA2traAM7O
        zgDCwsIAtra2AKqqqgCenp4AkpKSAIaGhgB6enoAbm5uAGJiYgBWVlYASkpKAD4+PgAyMjIAJiYmABoa
        GgAODg4A8Pv/AKSgoACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfn5+fn5+fn4AAAAAAAAAAAAAAAAAAAAAAAAAAAB+
        fn5+fn5+b35vfn5+fgAAAAAAAAAAAAAAAAAAAL3Hx71vb29vb29vb35vfn69fn4AAAAAAAAAAAAAAAC9
        x8fHx71vb297b3tvb29vvdW9fn4AAAAAAAAAAAAAva6ux67Hx729b3t7b3tvb2+9q71+fn4AAAAAAAAA
        AMeurseux67Hx8e9e3t7b3tvb2+9b29vvb0AAAAAAADHq6uurq6ux67Hx717e3t7e3tve29vvb3V1b0A
        AAAAAMerrquurq6ux8fHvXt7e3t7e3tvb728vLy91QAAAACuq6urrquuq66ux8fHvXt7e3t7vW+9x7y8
        vLzVvQAAAK6rsqurrquurq7Hx8e9iHuIe73Hvce8x7y8vL3VAAAArrKrsqurrquux8fH1Yh7iHt71cfH
        x8e8x7y8vNUAAK6yq7KrsqurrsfHvb2Ie4h7iHvVq6+rx8e8x7y81b0ArrKyq7Krq6vHvb2IiIiIiIh7
        iNWvq6+rvMe8x7y91QCu4rKyq7Krq72GiIaIiIiIiIh71bKvq6+rvMe8vLy9AAmusrKyq7Krq72GiIaI
        hoiIiNWyq6uvq6/HvMe8vNUACY6usrKyq729hoaGiIaIhojVsqursquvq6+vvMe81QAJjo6urrKuhpOG
        hoaGiIaIhojVsry8squvq6+rx7zVAAnijo6OrpOThpOGhoaGiIaIhojVe3u8vLKvq6/HvNUACY7ijpOO
        k5OThoaGhoaGiIbViIiIe3t7vLKrq8fH1QAACY7ijpOOk9XVhoaGhoiTvNXVhtW9e3u8squrx8cAAAAJ
        4o7ijpPVx8fVhoaGhoaTvIa8rtW9e3u8ssfHvAAAAAmO4o6TjtWux9WIhoaGhoiGiIa8rtW9e3u8vMe8
        AAAAAAmO4tXVrq7Hx9WIhoaGhoiGiIa8rrx7e3t7vAAAAAAACeLVq6urrsfHx9WIhoaGhoiGiIa8e3t7
        e3t7AAAAAAAArrLisquursfHx9WIhoaIhoiIiIZ7iHt7ewAAAAAAAAAArrLisquurq7Hx9WIhtXVe4iI
        iIh7e3sAAAAAAAAAAAAArrLisqurrq7Hx9XVx8fV1XuIiHt7AAAAAAAAAAAAAAAArrLisqurq66urq7H
        x8fH1Xt7e3sAAAAAAAAAAAAAAAAArq6y4rKrq6urrq6ux8fH1Xt7AAAAAAAAAAAAAAAAAAAAAK6urrLi
        squrq66ux8fVAAAAAAAAAAAAAAAAAAAAAAAAAAAArq6urq6urq4AAAAAAAAAAAAAAAD/8A///4AB//4A
        AH/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAIAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB/AAAA/4AAAf/AAAP/4AAH//gAH///AP/w==
</value>
  </data>
</root>